{"version":3,"file":"static/js/143.28188a63.chunk.js","mappings":"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","sources":["components/Portlet/Portlet.Styled.js","components/Portlet/index.js","components/Tree.js","pages/TreePage.js"],"sourcesContent":["import styled from 'styled-components';\nimport theme from '../../theme';\nimport { getProperty } from '../utility';\n\nconst style = {\n  primary: `\n      background:${theme.color.$primary};\n      color:white !important; \n    `,\n};\n\nconst Title = styled.h5`\n  font-size: 1.5rem;\n  text-align: center;\n  ${(props) => getProperty('color', props)}\n`;\nconst Portlet = styled.div`\n  background: white;\n  box-shadow: 0 0 20px 1px #bec0c2;\n  border-radius: 4px;\n  margin-bottom: 1rem;\n`;\nconst PortletHeader = styled.div`\n  border-bottom: ${theme.border.thin} ${theme.color.$gray2};\n  padding: 0.5rem 0;\n  ${() => style.primary};\n  min-height: 5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst PortletBody = styled.div`\n  padding: 2rem;\n  display: ${({ $flex }) => {\n    if ($flex) return 'flex';\n    return 'block';\n  }};\n  flex-direction: ${({ $flex, $flexColumn }) => {\n    if ($flex) return 'row';\n    if ($flexColumn) return 'column';\n    return 'none';\n  }};\n  flex-wrap: wrap;\n`;\nconst PortletFooter = styled.div`\n  padding: 0.5rem 1rem;\n  border-top: ${theme.border.thin} ${theme.color.$gray2};\n  display: ${({ flex }) => {\n    if (flex) return 'flex';\n    return 'flex';\n  }};\n  flex-direction: ${({ $flex, $flexColumn }) => {\n    if ($flex) return 'row';\n    if ($flexColumn) return 'column';\n    return 'column';\n  }};\n  flex-wrap: wrap;\n  justify-content: ${({ $center, $spaceBetween }) => {\n    if ($center) return 'center';\n    if ($spaceBetween) return 'space-between';\n    return 'left';\n  }};\n  overflow: auto;\n  text-align: left;\n`;\n\nexport { Title, Portlet, PortletHeader, PortletBody, PortletFooter };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Portlet,\n  PortletHeader,\n  PortletBody,\n  PortletFooter,\n  Title,\n} from './Portlet.Styled';\n\nconst PortletView = ({ title, content, footer }) => {\n  return (\n    <Portlet>\n      <PortletHeader>\n        <Title>{title}</Title>\n      </PortletHeader>\n      <PortletBody>{content}</PortletBody>\n      <PortletFooter>{footer}</PortletFooter>\n    </Portlet>\n  );\n};\n\nPortletView.propTypes = {\n  title: PropTypes.string,\n  content: PropTypes.node,\n  footer: PropTypes.node,\n};\n\nexport default PortletView;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport theme from '../theme';\n\nconst ParentNode = styled.div`\n  cursor: pointer; /* Add cursor style to indicate interactivity */\n  display: block; /* Display nodes horizontally */\n`;\nconst TreeNode = styled.div`\n  cursor: pointer; /* Add cursor style to indicate interactivity */\n  display: flex; /* Display nodes horizontally */\n  justify-content: left;\n  margin-left: 10px; /* Adjust the indentation as needed */\n`;\n\nconst ExpandedTreeNode = styled(TreeNode)`\n  margin-right: 10px; /* Add margin-right for expanded nodes */\n  font-weight: bold; /* Apply different styling to expanded nodes */\n`;\n\nconst TreeLeaf = styled.span`\n  color: ${theme.color.$black}; /* Style the leaves differently */\n`;\n\nconst Caret = styled.span`\n  margin-right: 5px;\n`;\n\nconst Tree = ({ data }) => {\n  const [expandedNodes, setExpandedNodes] = useState({});\n\n  const toggleExpansion = (node) => {\n    if (node.children) {\n      setExpandedNodes((prevState) => ({\n        ...prevState,\n        [node.id]: !prevState[node.id],\n      }));\n    }\n  };\n\n  const renderTree = (node) => {\n    const hasChildren = node.children && node.children.length > 0;\n    const isExpanded = expandedNodes[node.id];\n\n    const NodeComponent = isExpanded ? ExpandedTreeNode : TreeNode;\n\n    return (\n      <ParentNode key={node.id}>\n        <NodeComponent onClick={() => toggleExpansion(node)}>\n          {hasChildren && <Caret>{isExpanded ? '▼' : '▶'}</Caret>}\n          {node.label}\n        </NodeComponent>\n        {isExpanded && hasChildren && (\n          <TreeLeaf style={{ textIndent: node.level * 20 + 'px' }}>\n            {node.children.map((child) => renderTree(child))}\n          </TreeLeaf>\n        )}\n      </ParentNode>\n    );\n  };\n\n  if (!data) {\n    return null; // Handle the case where data is not defined\n  }\n\n  return <div>{renderTree(data)}</div>;\n};\n\nTree.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    label: PropTypes.string.isRequired,\n    children: PropTypes.arrayOf(PropTypes.object), // Children should be an array of objects with the same structure\n  }),\n};\n\nexport default Tree;\n","import React from 'react';\nimport CodeBlock from './pageUtils';\nimport PortletView from '../components/Portlet';\nimport Tree from '../components/Tree';\nimport fake_data from '../fake-data';\n\nconst { tree } = fake_data.pages;\nconst TreePage = () => {\n  return (\n    <PortletView\n      title={tree.page.title}\n      content={<Tree data={tree.data} />}\n      footer={\n        <CodeBlock\n          code={`\n           const data = {\n              id: 1,\n              label: 'Root',\n              level: 1,\n              children: [\n                {\n                  id: 2,\n                  label: 'Folder 1',\n                  level: 2,\n                  children: [\n                    {\n                      id: 3,\n                      label: 'Subfolder 1',\n                      level: 3,\n                      children: [\n                        {\n                          id: 4,\n                          level: 4,\n                          label: 'File 1-1',\n                        },\n                        {\n                          id: 5,\n                          label: 'File 1-2',\n                          level: 4,\n                        },\n                      ],\n                    },\n                    {\n                      id: 6,\n                      level: 3,\n                      label: 'File 1',\n                    },\n                  ],\n                },\n                {\n                  id: 7,\n                  label: 'Folder 2',\n                  level: 2,\n                  children: [\n                    {\n                      id: 8,\n                      label: 'Subfolder 2',\n                      level: 3,\n                      children: [\n                        {\n                          id: 9,\n                          label: 'File 2-1',\n                          level: 4,\n                        },\n                      ],\n                    },\n                    {\n                      id: 10,\n                      level: 3,\n                      label: 'File 2',\n                    },\n                  ],\n                },\n                {\n                  id: 11,\n                  level: 2,\n                  label: 'File 3',\n                },\n              ],\n            };\n\n            <Tree data={data} />\n      `}\n        />\n      }\n    />\n  );\n};\n\nexport default TreePage;\n"],"names":["style","primary","concat","theme","color","$primary","Title","styled","h5","_templateObject","_taggedTemplateLiteral","props","getProperty","Portlet","div","_templateObject2","PortletHeader","_templateObject3","border","thin","$gray2","PortletBody","_templateObject4","_ref","$flex","_ref2","$flexColumn","PortletFooter","_templateObject5","_ref3","flex","_ref4","_ref5","$center","$spaceBetween","title","content","footer","_jsxs","children","_jsx","ParentNode","TreeNode","ExpandedTreeNode","TreeLeaf","span","$black","Caret","data","_useState","useState","_useState2","_slicedToArray","expandedNodes","setExpandedNodes","renderTree","node","hasChildren","length","isExpanded","id","NodeComponent","onClick","prevState","_objectSpread","_defineProperty","toggleExpansion","label","textIndent","level","map","child","tree","fake_data","pages","PortletView","page","Tree","CodeBlock","code"],"sourceRoot":""}