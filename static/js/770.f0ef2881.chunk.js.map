{"version":3,"file":"static/js/770.f0ef2881.chunk.js","mappings":"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","sources":["components/Portlet/Portlet.Styled.js","components/Portlet/index.js","components/Tabs/Tabs.styled.js","components/Tabs/index.js","pages/TabsPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport theme from '../../theme';\nimport { getProperty } from '../utility';\n\nconst style = {\n  primary: `\n      background:${theme.color.$primary};\n      color:white !important; \n    `,\n};\n\nconst Title = styled.h5`\n  font-size: 1.5rem;\n  text-align: center;\n  ${(props) => getProperty('color', props)}\n`;\nconst Portlet = styled.div`\n  background: white;\n  box-shadow: 0 0 20px 1px #bec0c2;\n  border-radius: 4px;\n  margin-bottom: 1rem;\n`;\nconst PortletHeader = styled.div`\n  border-bottom: ${theme.border.thin} ${theme.color.$gray2};\n  padding: 0.5rem 0;\n  ${() => style.primary};\n  min-height: 5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst PortletBody = styled.div`\n  padding: 2rem;\n  display: ${({ $flex }) => {\n    if ($flex) return 'flex';\n    return 'block';\n  }};\n  flex-direction: ${({ $flex, $flexColumn }) => {\n    if ($flex) return 'row';\n    if ($flexColumn) return 'column';\n    return 'none';\n  }};\n  flex-wrap: wrap;\n`;\nconst PortletFooter = styled.div`\n  padding: 0.5rem 1rem;\n  border-top: ${theme.border.thin} ${theme.color.$gray2};\n  display: ${({ flex }) => {\n    if (flex) return 'flex';\n    return 'flex';\n  }};\n  flex-direction: ${({ $flex, $flexColumn }) => {\n    if ($flex) return 'row';\n    if ($flexColumn) return 'column';\n    return 'column';\n  }};\n  flex-wrap: wrap;\n  justify-content: ${({ $center, $spaceBetween }) => {\n    if ($center) return 'center';\n    if ($spaceBetween) return 'space-between';\n    return 'left';\n  }};\n  overflow: auto;\n  text-align: left;\n`;\n\nexport { Title, Portlet, PortletHeader, PortletBody, PortletFooter };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Portlet,\n  PortletHeader,\n  PortletBody,\n  PortletFooter,\n  Title,\n} from './Portlet.Styled';\n\nconst PortletView = ({ title, content, footer }) => {\n  return (\n    <Portlet>\n      <PortletHeader>\n        <Title>{title}</Title>\n      </PortletHeader>\n      <PortletBody>{content}</PortletBody>\n      <PortletFooter>{footer}</PortletFooter>\n    </Portlet>\n  );\n};\n\nPortletView.propTypes = {\n  title: PropTypes.string,\n  content: PropTypes.node,\n  footer: PropTypes.node,\n};\n\nexport default PortletView;\n","import styled from 'styled-components';\nimport theme from '../../theme';\nimport { getTabStyle } from '../utility';\nexport const TabsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  ${({ $left, $right }) => {\n    if ($left) return `flex-direction: row;`;\n    else if ($right) return `flex-direction: row-reverse;`;\n    return `flex-direction: column;`;\n  }}\n  border: solid 1px ${theme.color.$gray2};\n  border-radius: ${theme['border-radius'].$rounded};\n  box-shadow:\n    rgba(0, 0, 0, 0.1) 0rem 0.625rem 0.9375rem -0.1875rem,\n    rgba(0, 0, 0, 0.05) 0rem 0.25rem 0.375rem -0.125rem;\n  background: white;\n  overflow: hidden;\n  padding: 0.25rem;\n  transition: all 0.3s;\n  &:hover {\n    box-shadow:\n      rgba(0, 0, 0, 0.1) 0rem 0.625rem 0.9375rem -0.1875rem,\n      rgba(0, 0, 0, 0.4) 0rem 0.5rem 0.5rem -0.5rem;\n  }\n`;\n\nexport const TabList = styled.div`\n  display: flex;\n  align-items: center;\n  min-height: 40px;\n  border-bottom: solid 1px ${theme.color.$gray2};\n  width: inherit;\n  ${({ $left, $right }) => {\n    if ($left) {\n      return `\n    flex-direction: column;\n    width:20%;\n    border-right: solid 1px ${theme.color.$gray2};\n    `;\n    } else if ($right) {\n      return `\n      width:20%;\n    flex-direction: column;\n    border-left: solid 1px ${theme.color.$gray2};\n  \n    `;\n    }\n    return `flex-direction: row;`;\n  }}\n`;\nexport const TabItem = styled.div`\n  display: flex;\n  min-height: inherit;\n  font-size: 14px;\n  font-weight: 600;\n  align-items: center;\n  padding: 10px 15px;\n  white-space: nowrap;\n  cursor: pointer;\n  justify-content: center;\n  flex: 1 1 0;\n  width: 100%;\n  max-height: 50px;\n  ${getTabStyle}\n`;\nexport const TabPanelStyled = styled.div`\n  width: inherit;\n  padding: 1rem;\n  flex: 1 1 auto;\n  text-align: left;\n  text-align: justify;\n`;\n","import React, { createContext, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { TabsContainer, TabList, TabItem, TabPanelStyled } from './Tabs.styled';\nconst TabContext = createContext();\n\n// #################################################################\n// ################# Tab component         ######################\n// #################################################################\nconst Tab = (props) => {\n  const { $tabTitle, id } = props;\n  const {\n    changeTab,\n    $activeTabId,\n    props: parentProps,\n  } = useContext(TabContext);\n  const handleChangeTab = (id) => (event) => {\n    event.preventDefault();\n    changeTab(id);\n  };\n  return (\n    <TabItem\n      data-testid={$tabTitle}\n      $active={$activeTabId === id}\n      onClick={handleChangeTab(id)}\n      {...props}\n      {...parentProps}\n    >\n      {$tabTitle}\n    </TabItem>\n  );\n};\nTab.propTypes = {\n  id: PropTypes.number.isRequired,\n  $tabTitle: PropTypes.string.isRequired,\n};\n\n// #################################################################\n// ################# TabPanel component         ######################\n// #################################################################\nconst TabPanel = (props) => {\n  const { id, children, ...rest } = props;\n  const { $activeTabId } = useContext(TabContext);\n  if ($activeTabId === id) {\n    return (\n      <TabPanelStyled data-testid=\"active-panel\" {...rest}>\n        {children}\n      </TabPanelStyled>\n    );\n  }\n  return null;\n};\nTabPanel.propTypes = {\n  id: PropTypes.number,\n  children: PropTypes.node,\n};\n\n// #################################################################\n// ################# Tabs component         ######################\n// #################################################################\nconst Tabs = (props) => {\n  const [$activeTabId, setActiveTab] = useState(1);\n  const childComponents = props.children.filter(Boolean);\n  const changeTab = (tabId) => {\n    setActiveTab(tabId);\n  };\n\n  const { Provider } = TabContext;\n  const RenderTab = () =>\n    childComponents.map((child) => (\n      <Tab\n        key={child.props.id}\n        id={child.props.id}\n        children={child.props.children}\n        $tabTitle={child.props.$tabTitle}\n      />\n    ));\n\n  return (\n    <Provider\n      value={{\n        $activeTabId,\n        changeTab,\n        props,\n      }}\n    >\n      <TabsContainer {...props}>\n        <TabList {...props}>{RenderTab()}</TabList>\n        {childComponents.map((child) => (\n          <TabPanel\n            key={child.props.id}\n            id={child.props.id}\n            children={child.props.children}\n            $tabTitle={child.props.$tabTitle}\n          />\n        ))}\n      </TabsContainer>\n    </Provider>\n  );\n};\n\nTabs.propTypes = {\n  children: PropTypes.instanceOf(Array),\n  $activeTabID: PropTypes.number,\n};\nTabs.defaultProps = {\n  $activeTabID: 1,\n};\nTabs.Tab = Tab;\nexport default Tabs;\n","import React from 'react';\n\nimport PortletView from '../components/Portlet';\nimport Tabs from '../components/Tabs';\n\nimport CodeBlock from './pageUtils';\nimport fake_data from '../fake-data';\nimport { Col, Container, Row } from '../components/grid';\nconst TablePage = () => {\n  const { tab } = fake_data.pages;\n  return (\n    <Container>\n      <PortletView\n        title={tab.page.title}\n        content={\n          <Row>\n            <Col $sm={6}>\n              <Tabs $primary>\n                {tab.items.map(({ id, title, content }) => (\n                  <Tabs.Tab key={id} id={id} $tabTitle={title}>\n                    {content}\n                  </Tabs.Tab>\n                ))}\n              </Tabs>\n            </Col>\n            <Col $sm={6}>\n              <Tabs $secondary>\n                {tab.items.map(({ id, title, content }) => (\n                  <Tabs.Tab key={id} id={id} $tabTitle={title}>\n                    {content}\n                  </Tabs.Tab>\n                ))}\n              </Tabs>\n            </Col>\n          </Row>\n        }\n        footer={\n          <CodeBlock\n            code={`\n          <Row>\n            <Col $sm={4}>\n              <Tabs $primary>\n                {tab.items.map(({ id, title, content }) => (\n                  <Tabs.Tab key={id} id={id} $tabTitle={title}>\n                    {content}\n                  </Tabs.Tab>\n                ))}\n              </Tabs>\n            </Col>\n            <Col $sm={4}>\n              <Tabs $secondary>\n                {tab.items.map(({ id, title, content }) => (\n                  <Tabs.Tab key={id} id={id} $tabTitle={title}>\n                    {content}\n                  </Tabs.Tab>\n                ))}\n              </Tabs>\n            </Col>\n            <Col $sm={4}>\n              <Tabs $success>\n                {tab.items.map(({ id, title, content }) => (\n                  <Tabs.Tab key={id} id={id} $tabTitle={title}>\n                    {content}\n                  </Tabs.Tab>\n                ))}\n              </Tabs>\n            </Col>\n          </Row>\n            `}\n          />\n        }\n      />\n      <PortletView\n        title={tab.page.title2}\n        content={\n          <Row>\n            <Col $sm={6}>\n              <Tabs $primary $left>\n                {tab.items.map(({ id, title, content }) => (\n                  <Tabs.Tab key={id} id={id} $tabTitle={title}>\n                    {content}\n                  </Tabs.Tab>\n                ))}\n              </Tabs>\n            </Col>\n            <Col $sm={6}>\n              <Tabs $secondary $left>\n                {tab.items.map(({ id, title, content }) => (\n                  <Tabs.Tab key={id} id={id} $tabTitle={title}>\n                    {content}\n                  </Tabs.Tab>\n                ))}\n              </Tabs>\n            </Col>\n          </Row>\n        }\n        footer={\n          <CodeBlock\n            code={`\n          <Row>\n            <Col $sm={6}>\n              <Tabs $primary>\n                {tab.items.map(({ id, title, content }) => (\n                  <Tabs.Tab key={id} id={id} $tabTitle={title}>\n                    {content}\n                  </Tabs.Tab>\n                ))}\n              </Tabs>\n            </Col>\n            <Col $sm={6}>\n              <Tabs $secondary>\n                {tab.items.map(({ id, title, content }) => (\n                  <Tabs.Tab key={id} id={id} $tabTitle={title}>\n                    {content}\n                  </Tabs.Tab>\n                ))}\n              </Tabs>\n            </Col>\n      \n          </Row>\n            `}\n          />\n        }\n      />\n      <PortletView\n        title={tab.page.title3}\n        content={\n          <Row>\n            <Col $sm={6}>\n              <Tabs $primary $right>\n                {tab.items.map(({ id, title, content }) => (\n                  <Tabs.Tab key={id} id={id} $tabTitle={title}>\n                    {content}\n                  </Tabs.Tab>\n                ))}\n              </Tabs>\n            </Col>\n            <Col $sm={6}>\n              <Tabs $secondary $right>\n                {tab.items.map(({ id, title, content }) => (\n                  <Tabs.Tab key={id} id={id} $tabTitle={title}>\n                    {content}\n                  </Tabs.Tab>\n                ))}\n              </Tabs>\n            </Col>\n          </Row>\n        }\n        footer={\n          <CodeBlock\n            code={`\n          <Row>\n            <Col $sm={6}>\n              <Tabs $primary>\n                {tab.items.map(({ id, title, content }) => (\n                  <Tabs.Tab key={id} id={id} $tabTitle={title}>\n                    {content}\n                  </Tabs.Tab>\n                ))}\n              </Tabs>\n            </Col>\n            <Col $sm={6}>\n              <Tabs $secondary>\n                {tab.items.map(({ id, title, content }) => (\n                  <Tabs.Tab key={id} id={id} $tabTitle={title}>\n                    {content}\n                  </Tabs.Tab>\n                ))}\n              </Tabs>\n            </Col>\n         \n          </Row>\n            `}\n          />\n        }\n      />\n    </Container>\n  );\n};\n\nexport default TablePage;\n"],"names":["style","primary","concat","theme","color","$primary","Title","styled","h5","_templateObject","_taggedTemplateLiteral","props","getProperty","Portlet","div","_templateObject2","PortletHeader","_templateObject3","border","thin","$gray2","PortletBody","_templateObject4","_ref","$flex","_ref2","$flexColumn","PortletFooter","_templateObject5","_ref3","flex","_ref4","_ref5","$center","$spaceBetween","title","content","footer","_jsxs","children","_jsx","TabsContainer","$left","$right","$rounded","TabList","TabItem","getTabStyle","TabPanelStyled","TabContext","createContext","Tab","$tabTitle","id","_useContext","useContext","changeTab","$activeTabId","parentProps","_objectSpread","$active","onClick","event","preventDefault","handleChangeTab","TabPanel","rest","_objectWithoutProperties","_excluded","Tabs","_useState","useState","_useState2","_slicedToArray","setActiveTab","childComponents","filter","Boolean","Provider","value","tabId","map","child","defaultProps","$activeTabID","tab","fake_data","pages","Container","PortletView","page","Row","Col","$sm","items","$secondary","CodeBlock","code","title2","title3","_ref6"],"sourceRoot":""}